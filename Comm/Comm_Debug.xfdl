<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="cmmDebug" left="0" top="0" width="800" height="700" titletext="디버깅" onload="form_onload">
    <Layouts>
      <Layout>
        <Tab id="tab_component" taborder="0" left="10" top="78" right="10" tabindex="0" scrollbars="autoboth" bottom="10" onchanged="tab_component_onchanged">
          <Tabpages>
            <Tabpage id="tabpage1" text="Dataset">
              <Layouts>
                <Layout>
                  <Grid id="grd_dataset" taborder="0" useinputpanel="false" left="1" top="5" binddataset="ds_gridDataset" cellsizingtype="col" cellmovingtype="col" selecttype="row" right="1" bottom="10">
                    <Formats/>
                  </Grid>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tabpage2" text="SaveXML">
              <Layouts>
                <Layout>
                  <TextArea id="txt_saveXML" taborder="0" left="1" top="5" right="1" bottom="5"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tabpage3" text="Dataset To Grid">
              <Layouts>
                <Layout>
                  <TextArea id="txt_setGrid" taborder="0" left="1" top="5" right="1" bottom="5"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tabpage4" text="Grid Format">
              <Layouts>
                <Layout>
                  <TextArea id="txt_gridFormat" taborder="0" top="5" left="1" right="1" bottom="5"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tabpage5" text="Components">
              <Layouts>
                <Layout>
                  <Grid id="grd_properties" taborder="0" useinputpanel="false" left="1" top="5" binddataset="ds_properties" cellsizingtype="col" cellmovingtype="col" autofittype="col" selecttype="area" bottom="5" width="348">
                    <Formats>
                      <Format id="default">
                        <Columns>
                          <Column size="160"/>
                          <Column size="186"/>
                        </Columns>
                        <Rows>
                          <Row size="24" band="head"/>
                          <Row size="24"/>
                        </Rows>
                        <Band id="head">
                          <Cell text="Properties Name"/>
                          <Cell col="1" text="Value"/>
                        </Band>
                        <Band id="body">
                          <Cell style="align:left;" text="bind:NAME"/>
                          <Cell col="1" style="align:left;" text="bind:VALUE"/>
                        </Band>
                      </Format>
                    </Formats>
                  </Grid>
                </Layout>
              </Layouts>
              <InitValue/>
            </Tabpage>
            <Tabpage id="tabpage6" text="Variable">
              <Layouts>
                <Layout>
                  <Grid id="grd_variable" taborder="0" useinputpanel="false" left="1" top="29" binddataset="ds_variable" cellsizingtype="col" cellmovingtype="col" autofittype="col" selecttype="area" right="1" bottom="5">
                    <Formats>
                      <Format id="default">
                        <Columns>
                          <Column size="340"/>
                          <Column size="926"/>
                        </Columns>
                        <Rows>
                          <Row size="24" band="head"/>
                          <Row size="24"/>
                        </Rows>
                        <Band id="head">
                          <Cell text="Variable Name"/>
                          <Cell col="1" text="Value"/>
                        </Band>
                        <Band id="body">
                          <Cell style="align:left;color:BIND(COLOR);color2:BIND(COLOR);" text="bind:NAME"/>
                          <Cell col="1" edittype="normal" style="align:left;color:BIND(COLOR);color2:BIND(COLOR);" text="bind:VALUE"/>
                        </Band>
                      </Format>
                    </Formats>
                  </Grid>
                  <Combo id="cbo_variable" taborder="1" text="Local" left="85" top="6" innerdataset="ds_variableType" codecolumn="CODE" datacolumn="NAME" index="0" value="LOCAL" width="136" height="20" onitemchanged="tab_component_tabpage6_cbo_variable_onitemchanged"/>
                  <Static id="Static00" taborder="2" text="Variable Type" left="0" top="6" width="75" height="20"/>
                </Layout>
              </Layouts>
              <InitValue>
                <Static id="Static00" text="Variable Type"/>
              </InitValue>
            </Tabpage>
            <Tabpage id="tabpage7" text="Run Script">
              <Layouts>
                <Layout>
                  <TextArea id="txt_script" taborder="0" top="5" left="1" right="111" bottom="47" value="//alert(this.opener.divWork.form.dsList.saveXML());"/>
                  <Button id="btn_runScript" taborder="1" text="Run Script" height="40" width="104" onclick="fn_execScript" top="5" right="5"/>
                  <TextArea id="txt_result" taborder="2" left="0.19%" right="110" bottom="5" height="39" readonly="true"/>
                </Layout>
              </Layouts>
            </Tabpage>
          </Tabpages>
        </Tab>
        <Static id="Static05" taborder="1" top="0" width="10" cssclass="sta_WF_guideRed" visible="false" bottom="174" text="w&#13;&#10;10" right="0"/>
        <Static id="Static08" taborder="2" left="0" top="0" width="10" cssclass="sta_WF_guideRed" visible="false" bottom="174" text="w&#13;&#10;10"/>
        <Static id="Static04" taborder="3" left="0" cssclass="sta_WF_guideBlue" visible="false" text="h10" right="0" height="10" bottom="0"/>
        <Static id="Static06" taborder="4" left="0" top="0" cssclass="sta_WF_guideBlue" visible="false" text="h10" height="10" right="11"/>
        <Div id="div_search" taborder="5" left="10" top="10" height="64" leftbase="" topbase="" bottombase="" rightbase="" widthbase="" heightbase="" text="" cssclass="div_WF_search" right="10">
          <Layouts>
            <Layout>
              <Static id="Static03" taborder="0" text="Local" left="0" top="8" width="74" height="21" leftbase="" topbase="" bottombase="" rightbase="" widthbase="" heightbase="" cssclass="sta_WF_searchLabel"/>
              <Combo id="cbo_dataset" taborder="1" text="" left="75" top="8" width="167" height="21" innerdataset="ds_dataset" codecolumn="PATH" datacolumn="NAME" onitemchanged="cbo_dataset_onitemchanged" cssclass="essential" displayrowcount="25" type="filterlike" onkeydown="combo_onkeydown"/>
              <Static id="Static00" taborder="2" text="Grid" left="469" top="8" width="104" height="21" leftbase="" topbase="" bottombase="" rightbase="" widthbase="" heightbase="" cssclass="sta_WF_searchLabel"/>
              <Static id="Static05" taborder="3" text="Global" left="0" top="33" width="74" height="21" leftbase="" topbase="" bottombase="" rightbase="" widthbase="" heightbase="" cssclass="sta_WF_searchLabel"/>
              <Combo id="cbo_gDS" taborder="4" text="Combo00" left="75" top="32" width="167" height="21" innerdataset="ds_gDS" codecolumn="PATH" datacolumn="NAME" onitemchanged="cbo_gDS_onitemchanged" cssclass="essential" displayrowcount="25" type="filterlike" onkeydown="combo_onkeydown"/>
              <Button id="btn_localFilter" taborder="5" text="필터해제" left="244" top="8" width="66" height="21" uWord="popup.cancel" cssclass="btn_WF_detail" onclick="btn_localFilter_onclick"/>
              <Button id="btn_globalFilter" taborder="6" text="필터해제" left="244" top="32" width="66" height="21" uWord="popup.cancel" cssclass="btn_WF_detail" onclick="btn_globalFilter_onclick"/>
              <Static id="Static01" taborder="7" text="Component" left="469" top="32" width="104" height="21" leftbase="" topbase="" bottombase="" rightbase="" widthbase="" heightbase="" cssclass="sta_WF_searchLabel"/>
              <Static id="Static09" taborder="8" left="161" top="29" width="649" height="4" cssclass="sta_WF_guideRed" visible="false"/>
              <Edit id="edt_local" taborder="9" onkeydown="edt_local_onkeydown" left="313" top="8" height="21" width="167"/>
              <Edit id="edt_global" taborder="10" onkeydown="edt_global_onkeydown" left="313" top="32" height="21" width="167"/>
              <Combo id="cbo_grid" taborder="11" text="Combo00" left="573" top="8" height="21" innerdataset="ds_grid" datacolumn="NAME" codecolumn="PATH" onitemchanged="fn_makeGridFormats" displayrowcount="25" onkeydown="combo_onkeydown" width="136"/>
              <Combo id="cbo_components" taborder="12" innerdataset="ds_components" codecolumn="PATH" datacolumn="NAME" left="573" top="32" height="21" displayrowcount="25" onitemchanged="cbo_components_onitemchanged" onkeydown="combo_onkeydown" width="136"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="Static15" taborder="6" left="0" cssclass="sta_WF_guideBlue" visible="false" text="h5" right="610" height="5" top="73"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_dataset" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="PATH" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_gDS" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="PATH" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_grid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="PATH" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_gridDataset" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
      <Dataset id="ds_components" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="PATH" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_properties" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
          <Column id="FUNCTION" type="STRING" size="256"/>
          <Column id="COLOR" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_variableType" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">LOCAL</Col>
            <Col id="NAME">Local</Col>
          </Row>
          <Row>
            <Col id="CODE">GLOBAL</Col>
            <Col id="NAME">Global</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_variable" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
          <Column id="TYPE" type="STRING" size="256"/>
          <Column id="LVL" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_datasetView" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
          <Column id="TYPE" type="STRING" size="256"/>
          <Column id="LVL" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[
/************************************************************************************************
 * include 선언부
 ************************************************************************************************/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/
this.fv_currentCombo = "cbo_dataset"; // 현재선택이 로컬데이터셋인지 / GDS인지의 구분처리 
this.objApp 		= this.gfn_getApplication();

/************************************************************************************************
 * FORM EVENT 영역(onload, onbeforeclose)
 ************************************************************************************************/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	
	// Form Load 시 공통 기능 처리
	this.gfn_formOnLoad(this); //초기화[필수]

    // 로컬 데이터셋을 가져온다. 
	this.fn_saveDatasetList(this.opener);
	this.div_search.form.cbo_dataset.set_index(0);	
	this.fn_makeDatasetGrid();

	// 글로벌 데이터셋을 가져온다. 
	this.fn_saveGDSList();
	this.ds_gDS.set_keystring("S:NAME");

    // 화면의 GRID의 목록을 가져온다. 
	this.fn_saveGridList(this.opener);
	this.div_search.form.cbo_grid.set_index(0);	

    // 화면의 컴포넌트의 목록을 가져온다. 
	this.fn_saveComponetsList(this.opener);
	this.div_search.form.cbo_components.set_index(0);	

	// 화면에서 사용되는 변수목록을 가져온다. 
	this.ds_variable.clearData();
	this.fn_saveVariableList(this.opener);
	
	// 글로벌 변수 목록을 가져온다.
	this.fn_saveGlobalVariableList();
	this.ds_variable.set_keystring("S:LVL+NAME");
};

/************************************************************************************************
 * CALLBACK 콜백 처리부분(Transaction, Popup)
 ************************************************************************************************/
 
 
/************************************************************************************************
 * CRUD 및 TRANSACTION 서비스 호출 처리
 ************************************************************************************************/

 
/************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/
/**
 * @description 데이터셋의 목록을 찾아 저장한다. 
*/
this.fn_saveDatasetList = function(targetObj, fullpath)
{
	//trace("=============== fnSaveDatasetList targetObj.name : " + targetObj.name + " / fullpath : " + fullpath);
    var datasetlist = targetObj.objects;
    for(var i=0;i<datasetlist.length;i++)
    {
		if( datasetlist[i]+"" == "[object Dataset]" )
		{    
            var nRow = this.ds_dataset.addRow();
            this.ds_dataset.setColumn(nRow, "NAME", datasetlist[i].id);

            if( this.gfn_isNull(fullpath) )
            {
                this.ds_dataset.setColumn(nRow, "PATH", datasetlist[i].id);
            }
            else
            {
                // div_work.form. 으로 나오는 걸 잘라낸다. 
                var displayname = nexacro.replaceAll(fullpath+"."+datasetlist[i].id, "div_work.form.", "");				
                this.ds_dataset.setColumn(nRow, "NAME", displayname);
				//this.ds_dataset.setColumn(nRow, "NAME", fullpath+"."+datasetlist[i].id);
                this.ds_dataset.setColumn(nRow, "PATH", fullpath+"."+datasetlist[i].id);
            }
        }
    }

    var objList = targetObj.components;
    var sObjType;
    for(var i=0;i<objList.length;i++)
    {
        sObjType = objList[i]+"";
		//trace("=== sObjType : " + sObjType + " / name : " + objList[i].name);
        // Div
        if( sObjType == "[object Div]" )
        {
            if( this.gfn_isNull(fullpath) )
                this.fn_saveDatasetList(objList[i].form, objList[i].id+".form");
            else
                this.fn_saveDatasetList(objList[i].form, fullpath+"."+objList[i].id+".form");
        }
        // Tab
        else if( sObjType == "[object Tab]" )
        {
            var tabPageList = objList[i].tabpages;
            for(var j=0;j<tabPageList.length;j++)
            {
                if( this.gfn_isNull(fullpath) )
                    this.fn_saveDatasetList(tabPageList[j].form, objList[i].id+tabPageList[j].id+".form");
                else
                    this.fn_saveDatasetList(tabPageList[j].form, fullpath+"."+objList[i].id+tabPageList[j].id+".form");
            }
        }
    }
};

/**
 * @description 화면의 그리드목록을 저장한다. 
*/
this.fn_saveGridList = function(targetObj, fullpath)
{
	//trace("=============== fnSaveGridList targetObj.name : " + targetObj.name + " / fullpath : " + fullpath);
    var sObjType;
    
    var objList = targetObj.components;    
    for(var i=0;i<objList.length;i++)
    {
        sObjType = objList[i]+"";
        
		if( objList[i]+"" == "[object Grid]" )
		{    
            var nRow = this.ds_grid.addRow();
			
			// div_work.form. 으로 나오는 걸 잘라낸다. 
			var displayname = "";
			if (this.gfn_isNull(fullpath)) {
				displayname = nexacro.replaceAll(objList[i].name, "div_work.form.", "");
			}
			else {
				displayname = nexacro.replaceAll(fullpath+"."+objList[i].name, "div_work.form.", "");
			}

			this.ds_grid.setColumn(nRow, "NAME", displayname);
            //this.ds_grid.setColumn(nRow, "NAME", objList[i].name);

            if( this.gfn_isNull(fullpath) )
                this.ds_grid.setColumn(nRow, "PATH", objList[i].name);
            else
                this.ds_grid.setColumn(nRow, "PATH", fullpath+"."+objList[i].name);
        }        

        // Div
        if( sObjType == "[object Div]" )
        {
            if( this.gfn_isNull(fullpath) )
                this.fn_saveGridList(objList[i].form, objList[i].name+".form");
            else
                this.fn_saveGridList(objList[i].form, fullpath+"."+objList[i].name+".form");
        }
        // Tab
        else if( sObjType == "[object Tab]" )
        {
            var tabPageList = objList[i].tabpages;
            for(var j=0;j<tabPageList.length;j++)
            {
                if( this.gfn_isNull(fullpath) )
                    this.fn_saveGridList(tabPageList[j].form, objList[i].name+tabPageList[j].name+".form");
                else
                    this.fn_saveGridList(tabPageList[j].form, fullpath+"."+objList[i].name+tabPageList[j].name+".form");
            }
        }
    }
};

/**
 * @description 화면의 모든 Object를 저장한다. 
*/
this.fn_saveComponetsList = function(targetObj, fullpath)
{
	//trace("=============== fnSaveComponetsList targetObj.name : " + targetObj.name);
    var sObjType;    
    var objList = targetObj.components;    
    for(var i=0;i<objList.length;i++)
    {
        sObjType = objList[i]+"";

        // Div
        if( sObjType == "[object Div]" )
        {
            if( this.gfn_isNull(fullpath) )
                this.fn_saveComponetsList(objList[i].form, objList[i].name+".form");
            else
                this.fn_saveComponetsList(objList[i].form, fullpath+"."+objList[i].name+".form");
        }
        // Tab
        else if( sObjType == "[object Tab]" )
        {
            var tabPageList = objList[i].tabpages;
            for(var j=0;j<tabPageList.length;j++)
            {
                if( this.gfn_isNull(fullpath) )
                    this.fn_saveComponetsList(tabPageList[j].form, objList[i].name+tabPageList[j].name+".form");
                else
                    this.fn_saveComponetsList(tabPageList[j].form, fullpath+"."+objList[i].name+tabPageList[j].name+".form");
            }
        }
        else
        {			
			// div_work.form. 으로 나오는 걸 잘라낸다.
			if (!this.gfn_isNull(fullpath)) {
	            var nRow = this.ds_components.addRow();
				var displayname = nexacro.replaceAll(fullpath+"."+objList[i].name, "div_work.form.", "");
				this.ds_components.setColumn(nRow, "NAME", displayname);
				//this.ds_components.setColumn(nRow, "NAME", objList[i].name);

				if( this.gfn_isNull(fullpath) )
					this.ds_components.setColumn(nRow, "PATH", objList[i].name);
				else
					this.ds_components.setColumn(nRow, "PATH", fullpath+"."+objList[i].name);				
			}
        }
    }
};

/**
 * @description 글로벌 데이터셋 목록을 만든다.  
*/
this.fn_saveGDSList = function()
{
	var applicationobj = this.objApp.all;
    for (var i=0;i<applicationobj.length;i++)
    {
		if (applicationobj[i]+"" == "[object Dataset]")
		{
		    try
		    {
                if (applicationobj[i].id.indexOf(".") == -1)
                {
                    var nRow = this.ds_gDS.addRow();
                    this.ds_gDS.setColumn(nRow, "NAME", applicationobj[i].id);
                    this.ds_gDS.setColumn(nRow, "PATH", applicationobj[i].id);
                }
            }
            catch (e)
            {
				trace(">>>> e Message" + e);
            }
		}
    } 
};

/**
 * @description Dataset을 GRID에 표시한다.     
*/
this.fn_makeDatasetGrid = function()
{
    var dataset;

    if( this.fv_currentCombo == "cbo_dataset" )
    {
        if( this.div_search.form.cbo_dataset.index == -1 ) return;
        
        dataset = eval("this.opener."+this.div_search.form.cbo_dataset.value);
    }
    else
    {
        if( this.div_search.form.cbo_gDS.index == -1 ) return;
        
		dataset = this.objApp[this.div_search.form.cbo_gDS.text];
    }
	this.ds_datasetView.assign(dataset);

    // 데이터셋의 정보가 존재하지 않으면 
    if( dataset.getColCount() < 1 )
    {
        var formats = "";
        formats += '<Formats>\n';
        formats += '<Format id="default">\n';
        formats += '<Columns></Columns>\n';
        formats += '<Rows><Row size="24" band="head" /><Row size="24" /></Rows>\n';
        formats += '<Band id="head"></Band>\n';
        formats += '<Band id="body"></Band>\n';
        formats += '</Format>\n';
        formats += '</Formats>';
        
        this.tab_component.tabpage1.form.Grid00.set_formats(formats);
        return;
    }
    
    var columns = '    <Column size="30" />\n';
    var head    = '    <Cell col="0" text=""/>\n';
    //var body    = '    <Cell col="0" displaytype="image" text="expr:(dataset.getRowType(currow)==2)?\'theme://images/sta_n.png\':(dataset.getRowType(currow)==4)?\'theme://images/sta_u.png\':(dataset.getRowType(currow)==8)?\'theme://images/sta_d.png\':\'default\'"/>\n';
	var body    = '    <Cell col="0" displaytype="normal" text="expr:(dataset.getRowType(currow)==2)?\'I\':(dataset.getRowType(currow)==4)?\'M\':(dataset.getRowType(currow)==8)?\'\':\'\'"/>\n';    
	
    for(var i=0;i<dataset.getColCount();i++)
    {
        var columinfo = dataset.getColumnInfo(i);
        var columname = "";
        var columsize = "";
        var columtype = "";
        
        try
        {
             columname = columinfo.name;
             columsize = parseInt(columinfo.size);
             columtype = columinfo.type.toUpperCase();
        }
        catch(e)
        {
             columname = "undefined";
             columsize = 50;
             columtype = "STRING";
        }
        
        //Sonar Qube Unused local variables should be removed 조치 JBC 2016-09-20
        //var columwidth= 100;
        var align     = "";
        
        if( columtype == "STRING" )
        {
            columsize = columsize*9;
            
            if( columsize < columname.length*9 )
            {
                columsize = columname.length*9;
            }
            
            if( columsize > 200 )            
                columns += '    <Column size="200" />\n';
            else
                columns += '    <Column size="'+columsize+'" />\n';                
                
            align = 'style="align:left;"';
        }
        else if( columtype == "INT" )
        {
            columns += '<Column size="80" />\n';
            align = 'style="align:right;"';
        }
        else if( columtype == "FLOAT" )
        {
            columns += '<Column size="80" />\n';
            align = 'style="align:right;"';
        }
        else if( columtype == "DATE" )
        {
            columns += '<Column size="88" />\n';
            align = 'style="align:center;"';
        }
        else if( columtype == "TIME" )
        {
            columns += '<Column size="88" />\n';
            align = 'style="align:center;"';
        }
        else if( columtype == "DATETIME" )
        {
            columns += '<Column size="120" />\n';
            align = 'style="align:center;"';
        }
        else if( columtype == "BIGDECIMAL" )
        {
            columns += '<Column size="120" />\n';
            align = 'style="align:right;"';
        }
        else 
        {
            columns += '<Column size="120" />\n';
            align = 'style="align:left;"';
        }
        
        head += '    <Cell col="'+(i+1)+'" text="'+columname+'"/>\n';
        body += '    <Cell col="'+(i+1)+'" '+align+' text="bind:'+columname+'" displaytype="normal" edittype="normal"/>\n';
    }
    
    var formats = "";
    formats += '<Formats>\n';
    formats += '<Format id="default">\n';
    formats += '<Columns>\n'+columns.substring(0,columns.length-1)+'\n</Columns>\n';
    formats += '<Rows>\n    <Row size="24" band="head" />\n    <Row size="24" />\n</Rows>\n';
    formats += '<Band id="head">\n'+head.substring(0,head.length-1)+'\n</Band>\n';
    formats += '<Band id="body">\n'+body.substring(0,body.length-1)+'\n</Band>\n';
    formats += '</Format>\n';
    formats += '</Formats>';
    
    this.tab_component.tabpage1.form.grd_dataset.set_binddataset(this.ds_datasetView);
    this.tab_component.tabpage1.form.grd_dataset.set_formats(formats);
};

/**
 * @description 데이터셋의 내용을 XML로 표시한다. 
*/
this.fn_makeDatasetXml = function()
{
    var dataset;

    if( this.fv_currentCombo == "cbo_dataset" )
    {
        if( this.div_search.form.cbo_dataset.index == -1 ) return;
        
        dataset = eval("this.opener."+this.div_search.form.cbo_dataset.value);
    }
    else
    {
        if( this.div_search.form.cbo_gDS.index == -1 ) return;

		dataset = this.objApp[this.div_search.form.cbo_gDS.text];
    }     
    
    var text = nexacro.replaceAll(dataset.saveXML(), '<Dataset id="'+dataset.id+'">', '');
    text = nexacro.replaceAll(text, '</Dataset>', '');
    this.tab_component.tabpage2.form.txt_saveXML.set_value(text);
};

/**
 * @description 데이터셋을 GRID로 자동생성해준다
*/ 
this.fn_makeDatasetGridFormat = function()
{
    this.tab_component.tabpage3.form.txt_setGrid.set_value(this.tab_component.tabpage1.form.grd_dataset.formats);
};

/**
 * @description 화면의 그리드의 포맷을 가져온다. 
*/  
this.fn_makeGridFormats = function()
{
    if( this.div_search.form.cbo_grid.index == -1 ) return;
    
    var targetgrid = eval("this.opener."+this.div_search.form.cbo_grid.value);
    
    var formats = nexacro.replaceAll(targetgrid.formats, "><", ">\n<");
    formats = nexacro.replaceAll(formats, "<Column ", "    <Column ");
    formats = nexacro.replaceAll(formats, "<Cell ", "    <Cell ");
    formats = nexacro.replaceAll(formats, "<Row ", "    <Row ");

    // 리사이징한 그리드의 현재 컬럼 사이즈를 계산한다. 
    var newcolumn = "";    
    for(var i=0;i<targetgrid.getCellCount("Body");i++)
    {
        newcolumn += '    <Column size="'+targetgrid.getRealColSize(i, true)+'"/>\n';
    }        
    formats = formats.split("<Columns>")[0]+"<Columns>\n"+newcolumn +"</Columns>"+formats.split("</Columns>")[1]; 
    
    this.tab_component.tabpage4.form.txt_gridFormat.set_value(formats);    
    this.tab_component.set_tabindex(3);
};

/**
 * @description 컴포넌트의 모든속성을 디스플레이한다
*/ 
this.fn_makeCompoentsData = function()
{
    if( this.div_search.form.cbo_components.index == -1 ) return;
    
    var targetobj = eval("this.opener."+this.div_search.form.cbo_components.value);
    
    this.ds_properties.clearData();
    this.ds_properties.set_enableevent(false);
    for(var name in targetobj)
    {
        var value = targetobj[name]+"";
        
        if( name[0] == "_" ) continue;
        if( value == "[object Object]" ) continue;
        if( value.substring(0, 8) == "function" ) continue;
        if( value.substring(0, 7) == "control" ) continue;        

        if( this.gfn_isNull(value) ) 
        {
            var nrow = this.ds_properties.addRow();
            this.ds_properties.setColumn(nrow, "NAME", name);
            this.ds_properties.setColumn(nrow, "VALUE", "");
        }
        else
        {
            // 이벤트에 대한 처리 
            if( value.indexOf("[object") != -1 )
            {
                if( value.indexOf("EventListener") != -1 )
                {
                    var eventhandler = targetobj.getEventHandler(name, 0);
                    
                    if( !this.gfn_isNull(eventhandler) ) 
                    {
                        var nrow = this.ds_properties.addRow();
                        this.ds_properties.setColumn(nrow, "NAME",    name);
                        this.ds_properties.setColumn(nrow, "VALUE",   "function");
                        this.ds_properties.setColumn(nrow, "FUNCTION", eventhandler);
                        this.ds_properties.setColumn(nrow, "COLOR",    "red");
                    }
                }
            }
            else
            {
                var nrow = this.ds_properties.addRow();
                this.ds_properties.setColumn(nrow, "NAME",    name);
                this.ds_properties.setColumn(nrow, "VALUE", value);
            }
        }
    }
    this.ds_properties.set_enableevent(true);    
    this.ds_properties.set_rowposition(0);
};

/**
 * @description 화면에서 사용되는 모든 변수를 찾아 데이터셋에 저장한다. 
*/ 
this.fn_saveVariableList = function(targetObj, fullpath)
{
	//trace("================ fnSaveVariableList targetObj : " + targetObj.name);
	
	sObjType = targetObj +"";
		
    // 해당 OBJECT의 전역변수를 찾아낸다. 
    this.ds_variable.set_enableevent(false);
    for(var name in targetObj)
    {
		// 폼 변수는 fv로 Naming Rule 정의
		var sVariName = name.substr(0,2).toUpperCase();
        if (sVariName == "FV")
        {
            // 제외처리대상변수명        
            var value = targetObj[name]+"";        
            if( value.indexOf("[object") != -1 ) continue;
            if( value.substring(0, 8) == "function" ) continue;
			if( !targetObj.hasOwnProperty(name)) continue;
				
			// div_work.form. 으로 나오는 걸 잘라낸다. // && (fullpath+"."+name).indexOf("div_work.form.") > -1
			if( !this.gfn_isNull(fullpath))
			{				
				var nRow = this.ds_variable.addRow();
				var displayname = nexacro.replaceAll(fullpath+"."+name, "div_work.form.", "");
				this.ds_variable.setColumn(nRow, "NAME",  displayname);
				//this.ds_variable.setColumn(nRow, "NAME",  name);
				this.ds_variable.setColumn(nRow, "VALUE", value);
				this.ds_variable.setColumn(nRow, "TYPE",  "LOCAL");
				this.ds_variable.setColumn(nRow, "LVL",   name.split(".").length);
			}
        }
    }
	this.ds_variable.set_enableevent(true);
	
    // 해당 폼의 하위 OBJECT에 대한 변수도 같이 찾아온다. 
    var sObjType;    
    var objList = targetObj.components;    
    for(var i=0;i<objList.length;i++)
    {		
        sObjType = objList[i]+"";
		
        // Div
        if( sObjType == "[object Div]" )
        {
            if( this.gfn_isNull(fullpath) )
                this.fn_saveVariableList(objList[i].form, objList[i].name+".form");
            else
                this.fn_saveVariableList(objList[i].form, fullpath+"."+objList[i].name+".form");
        }
        // Tab
        else if( sObjType == "[object Tab]" )
        {
            var tabPageList = objList[i].tabpages;
            for(var j=0;j<tabPageList.length;j++)
            {
                if( this.gfn_isNull(fullpath) )
                    this.fn_saveVariableList(tabPageList[j].form, objList[i].name+tabPageList[j].name+".form");
                else
                    this.fn_saveVariableList(tabPageList[j].form, fullpath+"."+objList[i].name+tabPageList[j].name+".form");
            }
        }
    }
};

/**
 * @description 글로벌 변수를 찾아 데이터셋에 저장한다. 
*/ 
this.fn_saveGlobalVariableList = function()
{
	var targetObj = this.objApp;

	sObjType = targetObj +"";
		
    // 해당 OBJECT의 전역변수를 찾아낸다. 
    this.ds_variable.set_enableevent(false);
    for(var name in targetObj)
    {
        // 글로벌 변수는 gv로 Naming Rule 정의
		var sVariName = name.substr(0,2).toUpperCase();
        if( sVariName == "GV")
        {
            // 제외처리대상변수명        
            var value = targetObj[name]+"";        
            if( value.indexOf("[object") != -1 ) continue;
            if( value.substring(0, 8) == "function" ) continue;
			if( !targetObj.hasOwnProperty(name)) continue;
			
			// 글로벌 변수는 하나만이 존재하기 때문에.. 
			if( this.ds_variable.findRow("NAME", name) == -1 )
			{        
				var nRow = this.ds_variable.addRow();    
				this.ds_variable.setColumn(nRow, "NAME",  name);
				this.ds_variable.setColumn(nRow, "VALUE", value);
				this.ds_variable.setColumn(nRow, "TYPE",  "GLOBAL");
				this.ds_variable.setColumn(nRow, "LVL",   0);
			}
        }
    }
	this.ds_variable.set_enableevent(true);
};

/**
 * @description 화면에서 사용되는 모든 변수를 보여준다. 
*/
this.fn_makeVariableList = function()
{
    this.ds_variable.filter("TYPE == '"+this.tab_component.tabpage6.form.cbo_variable.value+"'");    
    this.ds_variable.set_rowposition(0);
};

/**
 * @description 문장을 스크립트로 실행한다. 
*/   
this.fn_execScript = function(obj:Button,  e:nexacro.ClickEventInfo)
{
    try
    {
	    var result = eval(this.tab_component.tabpage7.form.txt_script.text);
	    
	    if( this.gfn_isNull(result) ) result = "";
	    
	    this.tab_component.tabpage7.form.txt_result.set_value("★★★ 성공 : "+result);
	}
	catch(ex)
	{
	    this.tab_component.tabpage7.form.txt_result.set_value("＠＠＠ 실패 : "+ex);
	}	
};

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
/**
 * @description 선택한 TAB에 대한 처리를 한다.   
*/
this.tab_component_onchanged = function(obj:Tab, e:nexacro.TabIndexChangeEventInfo)
{
	var tabindex = this.tab_component.tabindex;

	switch(tabindex)
	{
	    case 0: this.fn_makeDatasetGrid();           break;
	    case 1: this.fn_makeDatasetXml();            break;
	    case 2: this.fn_makeDatasetGridFormat();	 break;
	    case 3: this.fn_makeGridFormats();           break;
	    case 4: this.fn_makeCompoentsData();	     break;
	    case 5: this.fn_makeVariableList();          break;
	    default : break;
	}
};

/**
 * @description 로컬 데이터셋의 내용을 보여준다.
*/ 
this.cbo_dataset_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
    this.fv_currentCombo = obj.name;	
    this.div_search.form.edt_local.set_value(obj.text);
	this.div_search.form.edt_global.set_value("");
    this.tab_component.set_tabindex(0);
    this.tab_component_onchanged();    
};

/**
 * @description 글로벌 데이터셋의 내용을 보여준다.
*/ 
this.cbo_gDS_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
    this.fv_currentCombo = obj.name;	
    this.div_search.form.edt_global.set_value(obj.value);
	this.div_search.form.edt_local.set_value("");
    this.tab_component.set_tabindex(0);
    this.tab_component_onchanged();    
};

/**
 * @description 컴포넌트의 모든 속성을 디스플레이한다.    
*/
this.cbo_components_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
    this.tab_component.set_tabindex(4);
    this.tab_component_onchanged();    
};

/**
 * @description 변수의 형식을 선택한 타입으로 필터링한다.    
*/ 
this.tab_component_tabpage6_cbo_variable_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
    this.ds_variable.filter("TYPE == '"+this.tab_component.tabpage6.form.cbo_variable.value+"'");    
    this.ds_variable.set_rowposition(0);
};

/**
 * @description 로컬 데이터셋 바로 찾기 기능
*/   
this.edt_local_onkeydown = function(obj:Edit, e:nexacro.KeyEventInfo)
{
    if( e.keycode == 13 )
    {
	    var nrow = this.ds_dataset.findRow("NAME", obj.value);
	    if( nrow != -1 )
	    {
	        
	        fv_currentCombo = "local";
            this.div_search.form.cbo_dataset.set_index(nrow);		        
            this.fn_makeDatasetGrid();
            this.cbo_dataset_onitemchanged(this.cbo_dataset);
        }
	}
};

/**
 * @description 글로벌 데이터셋 바로 찾기 기능
*/    
this.edt_global_onkeydown = function(obj:Edit, e:nexacro.KeyEventInfo)
{
    if( e.keycode == 13 )
    {
	    var nrow = this.ds_gDS.findRow("NAME", obj.value);
	    if( nrow != -1 )
	    {
	        fv_currentCombo = "global";
            this.div_search.form.cbo_gDS.set_index(nrow);		        
            this.div_search.form.cbo_gDS_onitemchanged(this.div_search.form.cbo_gDS);
            //this.fnMakeDatasetGrid();
	    }
	}
};


/**
 * @description 컴포넌트의 textvalue 값을 클립보드에 복사한다. 
*/  
this.combo_onkeydown = function(obj:nexacro.Combo,e:nexacro.KeyEventInfo)
{
	system.clearClipboard();
	system.setClipboard("CF_TEXT", obj.text);
};

/**
 * @description 로컬 데이터셋 필터 초기화
*/ 
this.btn_localFilter_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    var dataset = eval("this.opener."+ this.div_search.form.cbo_dataset.value);
    dataset.filter("");
};
/**
 * @description 글로벌 데이타셋 필터 초기화
*/
this.btn_globalFilter_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var dataset = this.objApp[this.div_search.form.cbo_gDS.text];
    dataset.filter("");
};

]]></Script>
  </Form>
</FDL>
